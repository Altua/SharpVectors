name: $(Build.SourceBranchName)-$(Year:yy).$(Month).$(DayOfYear).$(Revision)

trigger: none

pr: none

pool:
  vmImage: 'windows-latest'

resources:
  repositories:
    - repository: templates
      type: github
      name: Altua/BuildTemplates
      endpoint: Altua

variables:
- group: secrets
- name: solution
  value: 'Source/SharpVectors.sln'
- name: buildPlatform 
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'
- name: disable.coverage.autogenerate
  value: 'true'
- name: Revision
  value: $[counter('altua.sharpvectors', 0)]

steps:
- template: assemblyversion-variable-template.yml@templates

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --no-restore -p:Version=$(assemblyVersion)'

- task: CopyFiles@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Copy files to staging
  inputs:
    Contents: |
      Output\**\*.*
      Source\*.nuspec
      Images\SharpVectors64.png
      License.txt
    TargetFolder: '$(Build.ArtifactStagingDirectory)\SharpVectors'

- task: DownloadSecureFile@1    
  name: certificate
  displayName: 'Download code certificate'    
  inputs:
    secureFile: 'grunt.code.pfx'

- task: PowerShell@2
  displayName: Sign assemblies    
  inputs:
    targetType: 'inline'
    script: |
      $env:Path += ";${env:ProgramFiles(x86)}\Microsoft SDKs\ClickOnce\SignTool" 
      $assemblies = gci '$(Build.ArtifactStagingDirectory)/**/*.dll' -Recurse
      foreach($assembly in $assemblies) {
          signtool sign /fd SHA1 /td SHA1 /f $(certificate.secureFilePath) /p $(certPass) /q /tr http://timestamp.digicert.com $assembly
          signtool sign /fd SHA256 /td SHA256 /f $(certificate.secureFilePath) /p $(certPass) /q /as /tr http://timestamp.digicert.com $assembly
      }

- task: PublishPipelineArtifact@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: Publish code artifact
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)\SharpVectors'
    artifact: 'Altua.SharpVectors'